<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yushan.engagement_service.dao.ReviewMapper" >
  <resultMap id="BaseResultMap" type="com.yushan.engagement_service.entity.Review" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="uuid" jdbcType="OTHER" javaType="java.util.UUID" />
      <arg column="user_id" jdbcType="OTHER" javaType="java.util.UUID" />
      <arg column="novel_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rating" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="content" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="like_cnt" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="is_spoiler" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, uuid, user_id, novel_id, rating, title, content, like_cnt, is_spoiler, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from review
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from review
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yushan.engagement_service.entity.Review" >
    insert into review (id, uuid, user_id, 
      novel_id, rating, title, 
      content, like_cnt, is_spoiler, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=OTHER}, #{userId,jdbcType=OTHER}, 
      #{novelId,jdbcType=INTEGER}, #{rating,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{likeCnt,jdbcType=INTEGER}, #{isSpoiler,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yushan.engagement_service.entity.Review" useGeneratedKeys="true" keyProperty="id">
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="novelId != null" >
        novel_id,
      </if>
      <if test="rating != null" >
        rating,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="likeCnt != null" >
        like_cnt,
      </if>
      <if test="isSpoiler != null" >
        is_spoiler,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uuid != null" >
        #{uuid,jdbcType=OTHER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=OTHER},
      </if>
      <if test="novelId != null" >
        #{novelId,jdbcType=INTEGER},
      </if>
      <if test="rating != null" >
        #{rating,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeCnt != null" >
        #{likeCnt,jdbcType=INTEGER},
      </if>
      <if test="isSpoiler != null" >
        #{isSpoiler,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yushan.engagement_service.entity.Review" >
    update review
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=OTHER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=OTHER},
      </if>
      <if test="novelId != null" >
        novel_id = #{novelId,jdbcType=INTEGER},
      </if>
      <if test="rating != null" >
        rating = #{rating,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeCnt != null" >
        like_cnt = #{likeCnt,jdbcType=INTEGER},
      </if>
      <if test="isSpoiler != null" >
        is_spoiler = #{isSpoiler,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yushan.engagement_service.entity.Review" >
    update review
    set uuid = #{uuid,jdbcType=OTHER},
      user_id = #{userId,jdbcType=OTHER},
      novel_id = #{novelId,jdbcType=INTEGER},
      rating = #{rating,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      like_cnt = #{likeCnt,jdbcType=INTEGER},
      is_spoiler = #{isSpoiler,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByUuid" resultMap="BaseResultMap" parameterType="java.util.UUID">
    select 
    <include refid="Base_Column_List" />
    from review
    where uuid = #{uuid,jdbcType=OTHER}
  </select>

  <select id="selectByUserAndNovel" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from review
    where user_id = #{userId,jdbcType=OTHER} and novel_id = #{novelId,jdbcType=INTEGER}
  </select>

  <select id="selectByNovelId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    <include refid="Base_Column_List" />
    from review
    where novel_id = #{novelId,jdbcType=INTEGER}
    order by create_time desc
  </select>

  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.util.UUID">
    select 
    <include refid="Base_Column_List" />
    from review
    where user_id = #{userId,jdbcType=OTHER}
    order by create_time desc
  </select>

  <select id="selectReviewsWithPagination" resultMap="BaseResultMap" parameterType="com.yushan.engagement_service.dto.review.ReviewSearchRequestDTO">
    select 
    <include refid="Base_Column_List" />
    from review
    <where>
      <if test="novelId != null">
        and novel_id = #{novelId,jdbcType=INTEGER}
      </if>
      <if test="rating != null">
        and rating = #{rating,jdbcType=INTEGER}
      </if>
      <if test="isSpoiler != null">
        and is_spoiler = #{isSpoiler,jdbcType=BIT}
      </if>
      <if test="search != null and search != ''">
        and (title like concat('%', #{search}, '%') or content like concat('%', #{search}, '%'))
      </if>
    </where>
    <choose>
      <when test="sort != null and sort == 'rating'">
        order by rating ${order}
      </when>
      <when test="sort != null and sort == 'likeCnt'">
        order by like_cnt ${order}
      </when>
      <otherwise>
        order by create_time ${order}
      </otherwise>
    </choose>
    limit #{size} offset #{page} * #{size}
  </select>

  <select id="countReviews" resultType="long" parameterType="com.yushan.engagement_service.dto.review.ReviewSearchRequestDTO">
    select count(*)
    from review
    <where>
      <if test="novelId != null">
        and novel_id = #{novelId,jdbcType=INTEGER}
      </if>
      <if test="rating != null">
        and rating = #{rating,jdbcType=INTEGER}
      </if>
      <if test="isSpoiler != null">
        and is_spoiler = #{isSpoiler,jdbcType=BIT}
      </if>
      <if test="search != null and search != ''">
        and (title like concat('%', #{search}, '%') or content like concat('%', #{search}, '%'))
      </if>
    </where>
  </select>

  <update id="updateLikeCount">
    update review
    set like_cnt = like_cnt + #{increment,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>